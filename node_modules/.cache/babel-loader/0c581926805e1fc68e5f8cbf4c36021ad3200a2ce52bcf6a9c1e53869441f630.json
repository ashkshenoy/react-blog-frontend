{"ast":null,"code":"import axios from 'axios';\nconst authApi = axios.create({\n  baseURL: 'http://localhost:8080/auth',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\nconst apiInstance = axios.create({\n  baseURL: 'http://localhost:8080/api',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add request interceptor for protected routes\napiInstance.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n    console.log('Request with token:', {\n      url: config.url,\n      method: config.method,\n      tokenPrefix: token.substring(0, 20) + '...'\n    });\n  }\n  return config;\n}, error => {\n  // Add error handling for request errors\n  console.error('Request error:', error);\n  return Promise.reject(error);\n});\napiInstance.interceptors.response.use(response => {\n  console.log('API Response:', {\n    url: response.config.url,\n    status: response.status,\n    data: response.data\n  });\n  return response;\n}, error => {\n  var _error$config, _error$response, _error$response2, _error$response2$data;\n  console.error('API Error:', {\n    url: (_error$config = error.config) === null || _error$config === void 0 ? void 0 : _error$config.url,\n    status: (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status,\n    message: ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || error.message\n  });\n  return Promise.reject(error);\n});\nexport { authApi, apiInstance };","map":{"version":3,"names":["axios","authApi","create","baseURL","headers","apiInstance","interceptors","request","use","config","token","localStorage","getItem","Authorization","console","log","url","method","tokenPrefix","substring","error","Promise","reject","response","status","data","_error$config","_error$response","_error$response2","_error$response2$data","message"],"sources":["C:/Users/91998/Downloads/react-blog-frontend/src/api/axios.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst authApi = axios.create({\r\n    baseURL: 'http://localhost:8080/auth',\r\n    headers: {\r\n        'Content-Type': 'application/json'\r\n    }\r\n});\r\n\r\nconst apiInstance = axios.create({\r\n    baseURL: 'http://localhost:8080/api',\r\n    headers: {\r\n        'Content-Type': 'application/json'\r\n    }\r\n});\r\n\r\n// Add request interceptor for protected routes\r\napiInstance.interceptors.request.use(\r\n    (config) => {\r\n        const token = localStorage.getItem('token');\r\n        if (token) {\r\n            config.headers.Authorization = `Bearer ${token}`;\r\n            console.log('Request with token:', {\r\n                url: config.url,\r\n                method: config.method,\r\n                tokenPrefix: token.substring(0, 20) + '...'\r\n            });\r\n        }\r\n        return config;\r\n    },\r\n    (error) => {\r\n        // Add error handling for request errors\r\n        console.error('Request error:', error);\r\n        return Promise.reject(error);\r\n    }\r\n);\r\napiInstance.interceptors.response.use(\r\n    (response) => {\r\n        console.log('API Response:', {\r\n            url: response.config.url,\r\n            status: response.status,\r\n            data: response.data\r\n        });\r\n        return response;\r\n    },\r\n    (error) => {\r\n        console.error('API Error:', {\r\n            url: error.config?.url,\r\n            status: error.response?.status,\r\n            message: error.response?.data?.message || error.message\r\n        });\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\nexport { authApi, apiInstance };"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAGD,KAAK,CAACE,MAAM,CAAC;EACzBC,OAAO,EAAE,4BAA4B;EACrCC,OAAO,EAAE;IACL,cAAc,EAAE;EACpB;AACJ,CAAC,CAAC;AAEF,MAAMC,WAAW,GAAGL,KAAK,CAACE,MAAM,CAAC;EAC7BC,OAAO,EAAE,2BAA2B;EACpCC,OAAO,EAAE;IACL,cAAc,EAAE;EACpB;AACJ,CAAC,CAAC;;AAEF;AACAC,WAAW,CAACC,YAAY,CAACC,OAAO,CAACC,GAAG,CAC/BC,MAAM,IAAK;EACR,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACPD,MAAM,CAACL,OAAO,CAACS,aAAa,GAAG,UAAUH,KAAK,EAAE;IAChDI,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAE;MAC/BC,GAAG,EAAEP,MAAM,CAACO,GAAG;MACfC,MAAM,EAAER,MAAM,CAACQ,MAAM;MACrBC,WAAW,EAAER,KAAK,CAACS,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG;IAC1C,CAAC,CAAC;EACN;EACA,OAAOV,MAAM;AACjB,CAAC,EACAW,KAAK,IAAK;EACP;EACAN,OAAO,CAACM,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;EACtC,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAChC,CACJ,CAAC;AACDf,WAAW,CAACC,YAAY,CAACiB,QAAQ,CAACf,GAAG,CAChCe,QAAQ,IAAK;EACVT,OAAO,CAACC,GAAG,CAAC,eAAe,EAAE;IACzBC,GAAG,EAAEO,QAAQ,CAACd,MAAM,CAACO,GAAG;IACxBQ,MAAM,EAAED,QAAQ,CAACC,MAAM;IACvBC,IAAI,EAAEF,QAAQ,CAACE;EACnB,CAAC,CAAC;EACF,OAAOF,QAAQ;AACnB,CAAC,EACAH,KAAK,IAAK;EAAA,IAAAM,aAAA,EAAAC,eAAA,EAAAC,gBAAA,EAAAC,qBAAA;EACPf,OAAO,CAACM,KAAK,CAAC,YAAY,EAAE;IACxBJ,GAAG,GAAAU,aAAA,GAAEN,KAAK,CAACX,MAAM,cAAAiB,aAAA,uBAAZA,aAAA,CAAcV,GAAG;IACtBQ,MAAM,GAAAG,eAAA,GAAEP,KAAK,CAACG,QAAQ,cAAAI,eAAA,uBAAdA,eAAA,CAAgBH,MAAM;IAC9BM,OAAO,EAAE,EAAAF,gBAAA,GAAAR,KAAK,CAACG,QAAQ,cAAAK,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBH,IAAI,cAAAI,qBAAA,uBAApBA,qBAAA,CAAsBC,OAAO,KAAIV,KAAK,CAACU;EACpD,CAAC,CAAC;EACF,OAAOT,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAChC,CACJ,CAAC;AAED,SAASnB,OAAO,EAAEI,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}