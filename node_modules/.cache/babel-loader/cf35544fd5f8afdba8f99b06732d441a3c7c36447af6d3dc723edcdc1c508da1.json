{"ast":null,"code":"import axios from \"axios\";\nconst api = axios.create({\n  baseURL: \"http://localhost:8080/api\",\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n});\n\n// Add JWT token to headers if it exists\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem(\"token\");\n  console.log(token); // Or wherever you're storing it\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => Promise.reject(error));\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","console","log","Authorization","error","Promise","reject"],"sources":["C:/Users/91998/Downloads/react-blog-frontend/src/api/axios.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n  baseURL: \"http://localhost:8080/api\",\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n  }\r\n});\r\n\r\n// Add JWT token to headers if it exists\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem(\"token\"); \r\n    console.log(token);// Or wherever you're storing it\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => Promise.reject(error)\r\n);\r\n\r\n\r\n\r\n\r\nexport default api;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAE,2BAA2B;EACpCC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;EACV,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3CC,OAAO,CAACC,GAAG,CAACJ,KAAK,CAAC,CAAC;EACnB,IAAIA,KAAK,EAAE;IACTD,MAAM,CAACJ,OAAO,CAACU,aAAa,GAAG,UAAUL,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,EACAO,KAAK,IAAKC,OAAO,CAACC,MAAM,CAACF,KAAK,CACjC,CAAC;AAKD,eAAed,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}