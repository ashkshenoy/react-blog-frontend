{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { authApi } from '../api/axios';\nexport default function LoginPage() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError('');\n    setLoading(true);\n    try {\n      var _response$data, _response$data2;\n      console.log('Login attempt:', {\n        username,\n        requestUrl: '/login'\n      });\n      const response = await authApi.post('/login', {\n        username,\n        password\n      }, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      console.log('Raw response:', response);\n      console.log('Response data:', response.data);\n\n      // Check for JWT token in various possible response formats\n      const token = ((_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.token) || ((_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : _response$data2.access_token) || response.data;\n      if (token) {\n        console.log('Token found, storing...');\n        localStorage.setItem('token', token);\n        navigate('/');\n      } else {\n        console.error('Response missing token:', response.data);\n        throw new Error('Invalid server response - no token found');\n      }\n    } catch (error) {\n      var _error$response, _error$response2, _error$response3, _error$response3$data;\n      console.error('Login error details:', {\n        message: error.message,\n        response: (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data,\n        status: (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status\n      });\n      setError(((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || error.message || 'Login failed. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // ...rest of your component remains the same...\n}\n_s(LoginPage, \"lmS7rJqCwMH7RxoRYpQi9m7laZ0=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["useState","useNavigate","authApi","LoginPage","_s","username","setUsername","password","setPassword","error","setError","loading","setLoading","navigate","handleSubmit","e","preventDefault","_response$data","_response$data2","console","log","requestUrl","response","post","headers","data","token","access_token","localStorage","setItem","Error","_error$response","_error$response2","_error$response3","_error$response3$data","message","status","_c","$RefreshReg$"],"sources":["C:/Users/91998/Downloads/react-blog-frontend/src/pages/LoginPage.js"],"sourcesContent":["import { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { authApi } from '../api/axios';\r\n\r\nexport default function LoginPage() {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError('');\r\n    setLoading(true);\r\n\r\n    try {\r\n      console.log('Login attempt:', { username, requestUrl: '/login' });\r\n\r\n      const response = await authApi.post('/login', {\r\n        username,\r\n        password\r\n      }, {\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n\r\n      console.log('Raw response:', response);\r\n      console.log('Response data:', response.data);\r\n\r\n      // Check for JWT token in various possible response formats\r\n      const token = response.data?.token || response.data?.access_token || response.data;\r\n      \r\n      if (token) {\r\n        console.log('Token found, storing...');\r\n        localStorage.setItem('token', token);\r\n        navigate('/');\r\n      } else {\r\n        console.error('Response missing token:', response.data);\r\n        throw new Error('Invalid server response - no token found');\r\n      }\r\n    } catch (error) {\r\n      console.error('Login error details:', {\r\n        message: error.message,\r\n        response: error.response?.data,\r\n        status: error.response?.status\r\n      });\r\n      \r\n      setError(\r\n        error.response?.data?.message || \r\n        error.message || \r\n        'Login failed. Please try again.'\r\n      );\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // ...rest of your component remains the same...\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}