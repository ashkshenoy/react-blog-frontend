{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91998\\\\Downloads\\\\react-blog-frontend\\\\src\\\\components\\\\CommentsSection.js\";\nimport { useEffect, useState } from 'react';\nimport { apiInstance } from '../api/axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CommentsSection({\n  postId\n}) {\n  // ...existing state declarations...\n\n  const addComment = async () => {\n    if (!text.trim()) return;\n    setLoading(true);\n    setError('');\n    try {\n      // Simplified request with just the required data\n      const response = await apiInstance.post(`posts/${postId}/comment`, {\n        content: text.trim()\n      });\n      if (response.data) {\n        console.log('Comment added successfully:', response.data);\n        setText('');\n        await fetchComments(); // Refresh comments list\n      } else {\n        throw new Error('No response data received');\n      }\n    } catch (error) {\n      var _error$response, _error$response2, _error$response3, _error$response3$data;\n      console.error('Comment error:', {\n        message: error.message,\n        response: (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data,\n        status: (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status\n      });\n      setError(((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || \"Failed to add comment. Please try again.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault(); // Prevent form submission\n    await addComment();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mt-4 border-t pt-2\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"font-semibold mb-2\",\n      children: \"Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-red-600 text-sm mb-2\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), comments.map((comment, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-sm text-gray-700 border-b py-1\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: comment.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)\n    }, comment.id || index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"mt-2 flex gap-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: text,\n        onChange: e => setText(e.target.value),\n        placeholder: \"Write a comment\",\n        className: \"flex-1 p-2 border rounded\",\n        disabled: loading,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: `px-4 py-2 text-white rounded ${loading ? 'bg-blue-300' : 'bg-blue-500 hover:bg-blue-600'}`,\n        disabled: loading,\n        children: loading ? 'Posting...' : 'Post'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_c = CommentsSection;\nvar _c;\n$RefreshReg$(_c, \"CommentsSection\");","map":{"version":3,"names":["useEffect","useState","apiInstance","jsxDEV","_jsxDEV","CommentsSection","postId","addComment","text","trim","setLoading","setError","response","post","content","data","console","log","setText","fetchComments","Error","error","_error$response","_error$response2","_error$response3","_error$response3$data","message","status","handleSubmit","e","preventDefault","className","children","fileName","_jsxFileName","lineNumber","columnNumber","comments","map","comment","index","id","onSubmit","value","onChange","target","placeholder","disabled","loading","required","type","_c","$RefreshReg$"],"sources":["C:/Users/91998/Downloads/react-blog-frontend/src/components/CommentsSection.js"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { apiInstance } from '../api/axios';\r\n\r\nexport default function CommentsSection({ postId }) {\r\n  // ...existing state declarations...\r\n\r\n  const addComment = async () => {\r\n    if (!text.trim()) return;\r\n    \r\n    setLoading(true);\r\n    setError('');\r\n    \r\n    try {\r\n      // Simplified request with just the required data\r\n      const response = await apiInstance.post(`posts/${postId}/comment`, {\r\n        content: text.trim()\r\n      });\r\n\r\n      if (response.data) {\r\n        console.log('Comment added successfully:', response.data);\r\n        setText('');\r\n        await fetchComments(); // Refresh comments list\r\n      } else {\r\n        throw new Error('No response data received');\r\n      }\r\n    } catch (error) {\r\n      console.error('Comment error:', {\r\n        message: error.message,\r\n        response: error.response?.data,\r\n        status: error.response?.status\r\n      });\r\n      setError(error.response?.data?.message || \"Failed to add comment. Please try again.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault(); // Prevent form submission\r\n    await addComment();\r\n  };\r\n\r\n  return (\r\n    <div className=\"mt-4 border-t pt-2\">\r\n      <h3 className=\"font-semibold mb-2\">Comments</h3>\r\n      {error && (\r\n        <div className=\"text-red-600 text-sm mb-2\">{error}</div>\r\n      )}\r\n      {comments.map((comment, index) => (\r\n        <div key={comment.id || index} className=\"text-sm text-gray-700 border-b py-1\">\r\n          <p>{comment.content}</p>\r\n        </div>\r\n      ))}\r\n      <form onSubmit={handleSubmit} className=\"mt-2 flex gap-2\">\r\n        <input\r\n          value={text}\r\n          onChange={e => setText(e.target.value)}\r\n          placeholder=\"Write a comment\"\r\n          className=\"flex-1 p-2 border rounded\"\r\n          disabled={loading}\r\n          required\r\n        />\r\n        <button \r\n          type=\"submit\"\r\n          className={`px-4 py-2 text-white rounded ${\r\n            loading ? 'bg-blue-300' : 'bg-blue-500 hover:bg-blue-600'\r\n          }`}\r\n          disabled={loading}\r\n        >\r\n          {loading ? 'Posting...' : 'Post'}\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}