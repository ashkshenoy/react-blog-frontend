{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91998\\\\Downloads\\\\react-blog-frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useState, useContext, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { authApi } from '../api/axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(null);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const verifyAuth = async () => {\n      const token = localStorage.getItem('token');\n      const username = localStorage.getItem('username');\n      console.log('Auth Check:', {\n        hasToken: !!token,\n        hasUsername: !!username,\n        tokenPreview: token ? `${token.substring(0, 20)}...` : null\n      });\n      if (!token || !username) {\n        setLoading(false);\n        return;\n      }\n      try {\n        // Add withCredentials and explicit content type\n        const response = await authApi.get('/verify', {\n          headers: {\n            'Authorization': `Bearer ${token}`,\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n          },\n          withCredentials: true\n        });\n        if (response.status === 200) {\n          console.log('Verification successful');\n          setCurrentUser(username);\n        } else {\n          throw new Error('Unexpected response status: ' + response.status);\n        }\n      } catch (error) {\n        var _error$response, _error$response2, _error$response2$data, _error$response3, _error$response4, _error$response5;\n        console.error('Auth verification failed:', {\n          status: (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status,\n          message: ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || error.message,\n          data: (_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data\n        });\n\n        // Keep the user logged in if it's not an auth error\n        if (((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.status) === 401 || ((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.status) === 403) {\n          localStorage.removeItem('token');\n          localStorage.removeItem('username');\n          setCurrentUser(null);\n        } else {\n          // For other errors, keep the user logged in\n          console.warn('Non-auth error during verification, keeping session');\n          setCurrentUser(username);\n        }\n      } finally {\n        setLoading(false);\n      }\n    };\n    verifyAuth();\n  }, []);\n  const login = (token, username) => {\n    localStorage.setItem('token', token);\n    localStorage.setItem('username', username);\n    setCurrentUser(username);\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('username');\n    setCurrentUser(null);\n    navigate('/login');\n  };\n  const value = {\n    currentUser,\n    loading,\n    login,\n    logout,\n    isAuthenticated: !!currentUser\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"4XW06Xv3Wo+INaDFXZmN4cjHv/s=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useState","useContext","useEffect","useNavigate","authApi","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","currentUser","setCurrentUser","loading","setLoading","navigate","verifyAuth","token","localStorage","getItem","username","console","log","hasToken","hasUsername","tokenPreview","substring","response","get","headers","withCredentials","status","Error","error","_error$response","_error$response2","_error$response2$data","_error$response3","_error$response4","_error$response5","message","data","removeItem","warn","login","setItem","logout","value","isAuthenticated","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","$RefreshReg$"],"sources":["C:/Users/91998/Downloads/react-blog-frontend/src/context/AuthContext.js"],"sourcesContent":["import { createContext, useState, useContext, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { authApi } from '../api/axios';\r\n\r\nconst AuthContext = createContext(null);\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n    const [currentUser, setCurrentUser] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n    const navigate = useNavigate();\r\n    useEffect(() => {\r\n        const verifyAuth = async () => {\r\n            const token = localStorage.getItem('token');\r\n            const username = localStorage.getItem('username');\r\n            \r\n            console.log('Auth Check:', { \r\n                hasToken: !!token, \r\n                hasUsername: !!username,\r\n                tokenPreview: token ? `${token.substring(0, 20)}...` : null \r\n            });\r\n            \r\n            if (!token || !username) {\r\n                setLoading(false);\r\n                return;\r\n            }\r\n\r\n            try {\r\n                // Add withCredentials and explicit content type\r\n                const response = await authApi.get('/verify', {\r\n                    headers: {\r\n                        'Authorization': `Bearer ${token}`,\r\n                        'Content-Type': 'application/json',\r\n                        'Accept': 'application/json'\r\n                    },\r\n                    withCredentials: true\r\n                });\r\n\r\n                if (response.status === 200) {\r\n                    console.log('Verification successful');\r\n                    setCurrentUser(username);\r\n                } else {\r\n                    throw new Error('Unexpected response status: ' + response.status);\r\n                }\r\n            } catch (error) {\r\n                console.error('Auth verification failed:', {\r\n                    status: error.response?.status,\r\n                    message: error.response?.data?.message || error.message,\r\n                    data: error.response?.data\r\n                });\r\n\r\n                // Keep the user logged in if it's not an auth error\r\n                if (error.response?.status === 401 || error.response?.status === 403) {\r\n                    localStorage.removeItem('token');\r\n                    localStorage.removeItem('username');\r\n                    setCurrentUser(null);\r\n                } else {\r\n                    // For other errors, keep the user logged in\r\n                    console.warn('Non-auth error during verification, keeping session');\r\n                    setCurrentUser(username);\r\n                }\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        verifyAuth();\r\n    }, []);\r\n\r\n    const login = (token, username) => {\r\n        localStorage.setItem('token', token);\r\n        localStorage.setItem('username', username);\r\n        setCurrentUser(username);\r\n    };\r\n\r\n    const logout = () => {\r\n        localStorage.removeItem('token');\r\n        localStorage.removeItem('username');\r\n        setCurrentUser(null);\r\n        navigate('/login');\r\n    };\r\n\r\n    const value = {\r\n        currentUser,\r\n        loading,\r\n        login,\r\n        logout,\r\n        isAuthenticated: !!currentUser\r\n    };\r\n\r\n    return (\r\n        <AuthContext.Provider value={value}>\r\n            {!loading && children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n\r\nexport const useAuth = () => {\r\n    const context = useContext(AuthContext);\r\n    if (!context) {\r\n        throw new Error('useAuth must be used within an AuthProvider');\r\n    }\r\n    return context;\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}