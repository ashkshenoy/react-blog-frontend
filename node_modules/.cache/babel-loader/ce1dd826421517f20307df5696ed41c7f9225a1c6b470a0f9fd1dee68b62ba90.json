{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { authApi } from '../api/axios';\nconst RegisterPage = () => {\n  _s();\n  const [form, setForm] = useState({\n    username: '',\n    password: ''\n  });\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError('');\n    setLoading(true);\n    try {\n      console.log('Attempting registration with:', {\n        username: form.username,\n        password: '[REDACTED]'\n      });\n      const response = await authApi.post('/register', form, {\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        }\n      });\n      if (response.status === 200 || response.status === 201) {\n        console.log('Registration successful');\n        alert('Registration successful!');\n        navigate('/login');\n      }\n    } catch (err) {\n      var _err$response, _err$response2, _err$response3, _err$response4;\n      console.error('Registration failed:', {\n        status: (_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.status,\n        message: err.message,\n        data: (_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : _err$response2.data\n      });\n      if (((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : _err$response3.status) === 403) {\n        setError('Access forbidden. Please check your request or try again later.');\n      } else if (((_err$response4 = err.response) === null || _err$response4 === void 0 ? void 0 : _err$response4.status) === 409) {\n        setError('Username already exists.');\n      } else {\n        var _err$response5, _err$response5$data;\n        setError(((_err$response5 = err.response) === null || _err$response5 === void 0 ? void 0 : (_err$response5$data = _err$response5.data) === null || _err$response5$data === void 0 ? void 0 : _err$response5$data.message) || 'Registration failed. Please try again.');\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // ...rest of your component remains the same...\n};\n_s(RegisterPage, \"oFFqg2yZkzacXcd7r+3AuTaJOKk=\", false, function () {\n  return [useNavigate];\n});\n_c = RegisterPage;\nvar _c;\n$RefreshReg$(_c, \"RegisterPage\");","map":{"version":3,"names":["React","useState","useNavigate","authApi","RegisterPage","_s","form","setForm","username","password","error","setError","loading","setLoading","navigate","handleSubmit","e","preventDefault","console","log","response","post","headers","status","alert","err","_err$response","_err$response2","_err$response3","_err$response4","message","data","_err$response5","_err$response5$data","_c","$RefreshReg$"],"sources":["C:/Users/91998/Downloads/react-blog-frontend/src/pages/RegisterPage.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { authApi } from '../api/axios';\r\n\r\nconst RegisterPage = () => {\r\n  const [form, setForm] = useState({ username: '', password: '' });\r\n  const [error, setError] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError('');\r\n    setLoading(true);\r\n\r\n    try {\r\n      console.log('Attempting registration with:', {\r\n        username: form.username,\r\n        password: '[REDACTED]'\r\n      });\r\n\r\n      const response = await authApi.post('/register', form, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Accept': 'application/json'\r\n        }\r\n      });\r\n\r\n      if (response.status === 200 || response.status === 201) {\r\n        console.log('Registration successful');\r\n        alert('Registration successful!');\r\n        navigate('/login');\r\n      }\r\n    } catch (err) {\r\n      console.error('Registration failed:', {\r\n        status: err.response?.status,\r\n        message: err.message,\r\n        data: err.response?.data\r\n      });\r\n\r\n      if (err.response?.status === 403) {\r\n        setError('Access forbidden. Please check your request or try again later.');\r\n      } else if (err.response?.status === 409) {\r\n        setError('Username already exists.');\r\n      } else {\r\n        setError(err.response?.data?.message || 'Registration failed. Please try again.');\r\n      }\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // ...rest of your component remains the same...\r\n}"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,OAAO,QAAQ,cAAc;AAEtC,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC;IAAEO,QAAQ,EAAE,EAAE;IAAEC,QAAQ,EAAE;EAAG,CAAC,CAAC;EAChE,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAMa,QAAQ,GAAGZ,WAAW,CAAC,CAAC;EAE9B,MAAMa,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBN,QAAQ,CAAC,EAAE,CAAC;IACZE,UAAU,CAAC,IAAI,CAAC;IAEhB,IAAI;MACFK,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAE;QAC3CX,QAAQ,EAAEF,IAAI,CAACE,QAAQ;QACvBC,QAAQ,EAAE;MACZ,CAAC,CAAC;MAEF,MAAMW,QAAQ,GAAG,MAAMjB,OAAO,CAACkB,IAAI,CAAC,WAAW,EAAEf,IAAI,EAAE;QACrDgB,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClC,QAAQ,EAAE;QACZ;MACF,CAAC,CAAC;MAEF,IAAIF,QAAQ,CAACG,MAAM,KAAK,GAAG,IAAIH,QAAQ,CAACG,MAAM,KAAK,GAAG,EAAE;QACtDL,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;QACtCK,KAAK,CAAC,0BAA0B,CAAC;QACjCV,QAAQ,CAAC,QAAQ,CAAC;MACpB;IACF,CAAC,CAAC,OAAOW,GAAG,EAAE;MAAA,IAAAC,aAAA,EAAAC,cAAA,EAAAC,cAAA,EAAAC,cAAA;MACZX,OAAO,CAACR,KAAK,CAAC,sBAAsB,EAAE;QACpCa,MAAM,GAAAG,aAAA,GAAED,GAAG,CAACL,QAAQ,cAAAM,aAAA,uBAAZA,aAAA,CAAcH,MAAM;QAC5BO,OAAO,EAAEL,GAAG,CAACK,OAAO;QACpBC,IAAI,GAAAJ,cAAA,GAAEF,GAAG,CAACL,QAAQ,cAAAO,cAAA,uBAAZA,cAAA,CAAcI;MACtB,CAAC,CAAC;MAEF,IAAI,EAAAH,cAAA,GAAAH,GAAG,CAACL,QAAQ,cAAAQ,cAAA,uBAAZA,cAAA,CAAcL,MAAM,MAAK,GAAG,EAAE;QAChCZ,QAAQ,CAAC,iEAAiE,CAAC;MAC7E,CAAC,MAAM,IAAI,EAAAkB,cAAA,GAAAJ,GAAG,CAACL,QAAQ,cAAAS,cAAA,uBAAZA,cAAA,CAAcN,MAAM,MAAK,GAAG,EAAE;QACvCZ,QAAQ,CAAC,0BAA0B,CAAC;MACtC,CAAC,MAAM;QAAA,IAAAqB,cAAA,EAAAC,mBAAA;QACLtB,QAAQ,CAAC,EAAAqB,cAAA,GAAAP,GAAG,CAACL,QAAQ,cAAAY,cAAA,wBAAAC,mBAAA,GAAZD,cAAA,CAAcD,IAAI,cAAAE,mBAAA,uBAAlBA,mBAAA,CAAoBH,OAAO,KAAI,wCAAwC,CAAC;MACnF;IACF,CAAC,SAAS;MACRjB,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;;EAED;AACF,CAAC;AAAAR,EAAA,CAjDKD,YAAY;EAAA,QAICF,WAAW;AAAA;AAAAgC,EAAA,GAJxB9B,YAAY;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}