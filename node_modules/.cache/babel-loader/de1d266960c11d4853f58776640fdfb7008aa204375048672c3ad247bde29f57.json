{"ast":null,"code":"import axios from 'axios';\nconst authApi = axios.create({\n  baseURL: 'http://localhost:8080/auth',\n  headers: {\n    'Content-Type': 'application/json',\n    'Accept': 'application/json'\n  },\n  withCredentials: true\n});\n\n// Add request interceptor for debugging\nauthApi.interceptors.request.use(config => {\n  console.log('Auth API Request:', {\n    url: config.url,\n    method: config.method,\n    headers: config.headers,\n    data: config.data\n  });\n  return config;\n}, error => {\n  console.error('Auth API Request Error:', error);\n  return Promise.reject(error);\n});\n\n// Add response interceptor for debugging\nauthApi.interceptors.response.use(response => {\n  console.log('Auth API Response:', {\n    status: response.status,\n    headers: response.headers,\n    data: response.data\n  });\n  return response;\n}, error => {\n  var _error$response, _error$response2;\n  console.error('Auth API Response Error:', {\n    status: (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status,\n    message: error.message,\n    data: (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data\n  });\n  return Promise.reject(error);\n});\nexport { authApi };","map":{"version":3,"names":["axios","authApi","create","baseURL","headers","withCredentials","interceptors","request","use","config","console","log","url","method","data","error","Promise","reject","response","status","_error$response","_error$response2","message"],"sources":["C:/Users/91998/Downloads/react-blog-frontend/src/api/axios.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst authApi = axios.create({\r\n    baseURL: 'http://localhost:8080/auth',\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json'\r\n    },\r\n    withCredentials: true\r\n});\r\n\r\n// Add request interceptor for debugging\r\nauthApi.interceptors.request.use(\r\n    (config) => {\r\n        console.log('Auth API Request:', {\r\n            url: config.url,\r\n            method: config.method,\r\n            headers: config.headers,\r\n            data: config.data\r\n        });\r\n        return config;\r\n    },\r\n    (error) => {\r\n        console.error('Auth API Request Error:', error);\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\n// Add response interceptor for debugging\r\nauthApi.interceptors.response.use(\r\n    (response) => {\r\n        console.log('Auth API Response:', {\r\n            status: response.status,\r\n            headers: response.headers,\r\n            data: response.data\r\n        });\r\n        return response;\r\n    },\r\n    (error) => {\r\n        console.error('Auth API Response Error:', {\r\n            status: error.response?.status,\r\n            message: error.message,\r\n            data: error.response?.data\r\n        });\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\nexport { authApi };"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAGD,KAAK,CAACE,MAAM,CAAC;EACzBC,OAAO,EAAE,4BAA4B;EACrCC,OAAO,EAAE;IACL,cAAc,EAAE,kBAAkB;IAClC,QAAQ,EAAE;EACd,CAAC;EACDC,eAAe,EAAE;AACrB,CAAC,CAAC;;AAEF;AACAJ,OAAO,CAACK,YAAY,CAACC,OAAO,CAACC,GAAG,CAC3BC,MAAM,IAAK;EACRC,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAE;IAC7BC,GAAG,EAAEH,MAAM,CAACG,GAAG;IACfC,MAAM,EAAEJ,MAAM,CAACI,MAAM;IACrBT,OAAO,EAAEK,MAAM,CAACL,OAAO;IACvBU,IAAI,EAAEL,MAAM,CAACK;EACjB,CAAC,CAAC;EACF,OAAOL,MAAM;AACjB,CAAC,EACAM,KAAK,IAAK;EACPL,OAAO,CAACK,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;EAC/C,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAChC,CACJ,CAAC;;AAED;AACAd,OAAO,CAACK,YAAY,CAACY,QAAQ,CAACV,GAAG,CAC5BU,QAAQ,IAAK;EACVR,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAE;IAC9BQ,MAAM,EAAED,QAAQ,CAACC,MAAM;IACvBf,OAAO,EAAEc,QAAQ,CAACd,OAAO;IACzBU,IAAI,EAAEI,QAAQ,CAACJ;EACnB,CAAC,CAAC;EACF,OAAOI,QAAQ;AACnB,CAAC,EACAH,KAAK,IAAK;EAAA,IAAAK,eAAA,EAAAC,gBAAA;EACPX,OAAO,CAACK,KAAK,CAAC,0BAA0B,EAAE;IACtCI,MAAM,GAAAC,eAAA,GAAEL,KAAK,CAACG,QAAQ,cAAAE,eAAA,uBAAdA,eAAA,CAAgBD,MAAM;IAC9BG,OAAO,EAAEP,KAAK,CAACO,OAAO;IACtBR,IAAI,GAAAO,gBAAA,GAAEN,KAAK,CAACG,QAAQ,cAAAG,gBAAA,uBAAdA,gBAAA,CAAgBP;EAC1B,CAAC,CAAC;EACF,OAAOE,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAChC,CACJ,CAAC;AAED,SAASd,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}