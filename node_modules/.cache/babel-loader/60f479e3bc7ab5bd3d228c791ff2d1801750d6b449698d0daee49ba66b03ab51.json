{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91998\\\\Downloads\\\\react-blog-frontend\\\\src\\\\pages\\\\HomePage.js\",\n  _s = $RefreshSig$();\n// src/pages/HomePage.jsx\nimport { useEffect, useState } from 'react';\nimport { apiInstance } from '../api/axios';\nimport PostCard from '../components/PostCard';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function HomePage() {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [currentUser, setCurrentUser] = useState(null);\n  const [categories, setCategories] = useState([]);\n  const [tags, setTags] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState(\"\");\n  const [isAuthenticated, setIsAuthenticated] = useState(false); // Add this line\n  const [selectedTag, setSelectedTag] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n  const navigate = useNavigate();\n  useEffect(() => {\n    let isMounted = true; // Add mounted flag\n\n    const checkAuth = async () => {\n      console.log(\"=== Auth Check ===\");\n      const token = localStorage.getItem(\"token\");\n      if (!token && isMounted) {\n        console.log(\"No token found - redirecting to login\");\n        setCurrentUser(null);\n        setIsAuthenticated(false);\n        navigate('/login');\n        return;\n      }\n      try {\n        const parts = token.split('.');\n        if (parts.length !== 3) throw new Error('Invalid token format');\n        const payload = JSON.parse(atob(parts[1]));\n        if (payload.exp && payload.exp * 1000 < Date.now()) {\n          throw new Error('Token expired');\n        }\n        if (isMounted) {\n          setCurrentUser(payload.sub);\n          setIsAuthenticated(true);\n          console.log(\"User authenticated:\", payload.sub);\n          await fetchData(); // Wait for data fetch\n        }\n      } catch (error) {\n        console.error(\"Auth error:\", error.message);\n        localStorage.removeItem(\"token\");\n        if (isMounted) {\n          setCurrentUser(null);\n          setIsAuthenticated(false);\n          navigate('/login');\n        }\n      }\n    };\n    checkAuth();\n    return () => {\n      isMounted = false; // Cleanup on unmount\n    };\n  }, [navigate]);\n  const fetchData = async () => {\n    if (!isAuthenticated) return;\n    setLoading(true);\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        console.log('No token found in fetchData');\n        setIsAuthenticated(false);\n        navigate('/login');\n        return;\n      }\n\n      // Log token for debugging\n      console.log('Using token:', token.substring(0, 20) + '...');\n\n      // Add explicit headers to requests\n      const config = {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      };\n      let url = \"posts\";\n      if (selectedCategory) url = `posts/category/${selectedCategory}`;else if (selectedTag) url = `posts/tag/${selectedTag}`;\n\n      // Make requests with explicit headers\n      const [postsRes, categoriesRes, tagsRes] = await Promise.all([apiInstance.get(url, config), apiInstance.get(\"categories\", config), apiInstance.get(\"tags\", config)]);\n\n      // Validate responses and update state\n      if (postsRes !== null && postsRes !== void 0 && postsRes.data && categoriesRes !== null && categoriesRes !== void 0 && categoriesRes.data && tagsRes !== null && tagsRes !== void 0 && tagsRes.data) {\n        console.log('Data fetched successfully');\n        setPosts(postsRes.data);\n        setCategories(categoriesRes.data);\n        setTags(tagsRes.data);\n      } else {\n        throw new Error('Invalid response data');\n      }\n    } catch (error) {\n      var _error$response, _error$response2, _error$response3, _error$response4;\n      console.error(\"Data fetch error:\", {\n        message: error.message,\n        status: (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status,\n        data: (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data\n      });\n      if (((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.status) === 403 || ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.status) === 401) {\n        console.log('Auth failed - redirecting to login');\n        setIsAuthenticated(false);\n        localStorage.removeItem('token');\n        navigate('/login');\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n  // Remove duplicate useEffect for categories and tags\n  useEffect(() => {\n    if (isAuthenticated) {\n      fetchData();\n    }\n  }, [isAuthenticated, selectedCategory, selectedTag]);\n\n  // ...rest of your component code...\n\n  // Handler for when a category is selected\n  const handleCategoryChange = e => {\n    setSelectedCategory(e.target.value);\n    setSelectedTag(\"\"); // reset tag filter\n  };\n\n  // Handler for when a tag is selected\n  const handleTagChange = e => {\n    setSelectedTag(e.target.value);\n    setSelectedCategory(\"\"); // reset category filter\n  };\n\n  // Fetch posts whenever selected filters change\n  // In the posts fetching useEffect\n\n  // Delete action\n  const deletePost = async id => {\n    if (window.confirm(\"Are you sure you want to delete this post?\")) {\n      await apiInstance.delete(`/posts/${id}`);\n      setPosts(posts.filter(p => p.id !== id));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4 max-w-3xl mx-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"Blog Feed\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex gap-4 mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedCategory,\n        onChange: handleCategoryChange,\n        className: \"p-2 border rounded\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"All Categories\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this), categories.map(c => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: c.id,\n          children: c.name\n        }, c.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedTag,\n        onChange: handleTagChange,\n        className: \"p-2 border rounded\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"All Tags\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this), tags.map(t => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: t.id,\n          children: t.name\n        }, t.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading posts...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 9\n    }, this) : posts.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No posts found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"space-y-4\",\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(PostCard, {\n          post: post,\n          currentUser: currentUser,\n          onDelete: deletePost\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 15\n        }, this)\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 5\n  }, this);\n}\n_s(HomePage, \"rSamXJ1CBv67ulDXxcSknGVn+SE=\", false, function () {\n  return [useNavigate];\n});\n_c = HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["useEffect","useState","apiInstance","PostCard","useNavigate","jsxDEV","_jsxDEV","HomePage","_s","posts","setPosts","currentUser","setCurrentUser","categories","setCategories","tags","setTags","selectedCategory","setSelectedCategory","isAuthenticated","setIsAuthenticated","selectedTag","setSelectedTag","loading","setLoading","navigate","isMounted","checkAuth","console","log","token","localStorage","getItem","parts","split","length","Error","payload","JSON","parse","atob","exp","Date","now","sub","fetchData","error","message","removeItem","substring","config","headers","url","postsRes","categoriesRes","tagsRes","Promise","all","get","data","_error$response","_error$response2","_error$response3","_error$response4","status","response","handleCategoryChange","e","target","value","handleTagChange","deletePost","id","window","confirm","delete","filter","p","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","map","c","name","t","post","onDelete","_c","$RefreshReg$"],"sources":["C:/Users/91998/Downloads/react-blog-frontend/src/pages/HomePage.js"],"sourcesContent":["// src/pages/HomePage.jsx\r\nimport { useEffect, useState } from 'react';\r\nimport {apiInstance} from '../api/axios';\r\nimport PostCard from '../components/PostCard';\r\nimport { useNavigate } from 'react-router-dom';\r\nexport default function HomePage() {\r\n  const [posts, setPosts] = useState([]);\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [categories, setCategories] = useState([]);\r\n  const [tags, setTags] = useState([]);\r\n  const [selectedCategory, setSelectedCategory] = useState(\"\");\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false); // Add this line\r\n  const [selectedTag, setSelectedTag] = useState(\"\");\r\n  const [loading, setLoading] = useState(true);\r\n  const navigate = useNavigate();\r\n\r\n\r\n  useEffect(() => {\r\n    let isMounted = true;  // Add mounted flag\r\n\r\n    const checkAuth = async () => {\r\n      console.log(\"=== Auth Check ===\");\r\n      const token = localStorage.getItem(\"token\");\r\n      \r\n      if (!token && isMounted) {\r\n        console.log(\"No token found - redirecting to login\");\r\n        setCurrentUser(null);\r\n        setIsAuthenticated(false);\r\n        navigate('/login');\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const parts = token.split('.');\r\n        if (parts.length !== 3) throw new Error('Invalid token format');\r\n\r\n        const payload = JSON.parse(atob(parts[1]));\r\n        if (payload.exp && payload.exp * 1000 < Date.now()) {\r\n          throw new Error('Token expired');\r\n        }\r\n\r\n        if (isMounted) {\r\n          setCurrentUser(payload.sub);\r\n          setIsAuthenticated(true);\r\n          console.log(\"User authenticated:\", payload.sub);\r\n          await fetchData();  // Wait for data fetch\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Auth error:\", error.message);\r\n        localStorage.removeItem(\"token\");\r\n        if (isMounted) {\r\n          setCurrentUser(null);\r\n          setIsAuthenticated(false);\r\n          navigate('/login');\r\n        }\r\n      }\r\n    };\r\n\r\n    checkAuth();\r\n\r\n    return () => {\r\n      isMounted = false;  // Cleanup on unmount\r\n    };\r\n  }, [navigate]);\r\n\r\n  const fetchData = async () => {\r\n    if (!isAuthenticated) return;\r\n    \r\n    setLoading(true);\r\n    try {\r\n        const token = localStorage.getItem('token');\r\n        if (!token) {\r\n            console.log('No token found in fetchData');\r\n            setIsAuthenticated(false);\r\n            navigate('/login');\r\n            return;\r\n        }\r\n\r\n        // Log token for debugging\r\n        console.log('Using token:', token.substring(0, 20) + '...');\r\n\r\n        // Add explicit headers to requests\r\n        const config = {\r\n            headers: {\r\n                'Authorization': `Bearer ${token}`,\r\n                'Content-Type': 'application/json'\r\n            }\r\n        };\r\n\r\n        let url = \"posts\";\r\n        if (selectedCategory) url = `posts/category/${selectedCategory}`;\r\n        else if (selectedTag) url = `posts/tag/${selectedTag}`;\r\n\r\n        // Make requests with explicit headers\r\n        const [postsRes, categoriesRes, tagsRes] = await Promise.all([\r\n            apiInstance.get(url, config),\r\n            apiInstance.get(\"categories\", config),\r\n            apiInstance.get(\"tags\", config)\r\n        ]);\r\n\r\n        // Validate responses and update state\r\n        if (postsRes?.data && categoriesRes?.data && tagsRes?.data) {\r\n            console.log('Data fetched successfully');\r\n            setPosts(postsRes.data);\r\n            setCategories(categoriesRes.data);\r\n            setTags(tagsRes.data);\r\n        } else {\r\n            throw new Error('Invalid response data');\r\n        }\r\n    } catch (error) {\r\n        console.error(\"Data fetch error:\", {\r\n            message: error.message,\r\n            status: error.response?.status,\r\n            data: error.response?.data\r\n        });\r\n        \r\n        if (error.response?.status === 403 || error.response?.status === 401) {\r\n            console.log('Auth failed - redirecting to login');\r\n            setIsAuthenticated(false);\r\n            localStorage.removeItem('token');\r\n            navigate('/login');\r\n        }\r\n    } finally {\r\n        setLoading(false);\r\n    }\r\n};\r\n  // Remove duplicate useEffect for categories and tags\r\n  useEffect(() => {\r\n    if (isAuthenticated) {\r\n      fetchData();\r\n    }\r\n  }, [isAuthenticated, selectedCategory, selectedTag]);\r\n\r\n  // ...rest of your component code...\r\n\r\n\r\n  // Handler for when a category is selected\r\n  const handleCategoryChange = (e) => {\r\n    setSelectedCategory(e.target.value);\r\n    setSelectedTag(\"\"); // reset tag filter\r\n  };\r\n\r\n  // Handler for when a tag is selected\r\n  const handleTagChange = (e) => {\r\n    setSelectedTag(e.target.value);\r\n    setSelectedCategory(\"\"); // reset category filter\r\n  };\r\n\r\n  // Fetch posts whenever selected filters change\r\n  // In the posts fetching useEffect\r\n\r\n\r\n  // Delete action\r\n  const deletePost = async (id) => {\r\n    if (window.confirm(\"Are you sure you want to delete this post?\")) {\r\n      await apiInstance.delete(`/posts/${id}`);\r\n      setPosts(posts.filter(p => p.id !== id));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-4 max-w-3xl mx-auto\">\r\n      <h1 className=\"text-2xl font-bold mb-4\">Blog Feed</h1>\r\n      <div className=\"flex gap-4 mb-4\">\r\n        <select\r\n          value={selectedCategory}\r\n          onChange={handleCategoryChange}\r\n          className=\"p-2 border rounded\"\r\n        >\r\n          <option value=\"\">All Categories</option>\r\n          {categories.map(c => (\r\n            <option key={c.id} value={c.id}>\r\n              {c.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n\r\n        <select\r\n          value={selectedTag}\r\n          onChange={handleTagChange}\r\n          className=\"p-2 border rounded\"\r\n        >\r\n          <option value=\"\">All Tags</option>\r\n          {tags.map(t => (\r\n            <option key={t.id} value={t.id}>\r\n              {t.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n\r\n      {loading ? (\r\n        <p>Loading posts...</p>\r\n      ) : posts.length === 0 ? (\r\n        <p>No posts found.</p>\r\n      ) : (\r\n        <ul className=\"space-y-4\">\r\n          {posts.map(post => (\r\n            <li key={post.id}>\r\n              <PostCard\r\n                post={post}\r\n                currentUser={currentUser}\r\n                onDelete={deletePost}\r\n              />\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}