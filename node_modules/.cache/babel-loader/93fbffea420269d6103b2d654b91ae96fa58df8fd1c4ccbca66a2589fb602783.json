{"ast":null,"code":"import axios from 'axios';\n\n// Auth API instance\nconst authApi = axios.create({\n  baseURL: 'http://localhost:8080/auth',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Main API instance for protected routes\nconst apiInstance = axios.create({\n  baseURL: 'http://localhost:8080/api',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add request interceptor for protected routes\napiInstance.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  console.log('Interceptor - Token present:', !!token);\n  if (token) {\n    config.headers['Authorization'] = `Bearer ${token}`;\n    console.log('Added auth header:', config.headers['Authorization'].substring(0, 20) + '...');\n  }\n  return config;\n}, error => {\n  console.error('Request interceptor error:', error);\n  return Promise.reject(error);\n});\nexport { authApi };\nexport default apiInstance;","map":{"version":3,"names":["axios","authApi","create","baseURL","headers","apiInstance","interceptors","request","use","config","token","localStorage","getItem","console","log","substring","error","Promise","reject"],"sources":["C:/Users/91998/Downloads/react-blog-frontend/src/api/axios.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// Auth API instance\r\nconst authApi = axios.create({\r\n    baseURL: 'http://localhost:8080/auth',\r\n    headers: {\r\n        'Content-Type': 'application/json'\r\n    }\r\n});\r\n\r\n// Main API instance for protected routes\r\nconst apiInstance = axios.create({\r\n    baseURL: 'http://localhost:8080/api',\r\n    headers: {\r\n        'Content-Type': 'application/json'\r\n    }\r\n});\r\n\r\n// Add request interceptor for protected routes\r\napiInstance.interceptors.request.use(\r\n    (config) => {\r\n        const token = localStorage.getItem('token');\r\n        console.log('Interceptor - Token present:', !!token);\r\n        \r\n        if (token) {\r\n            config.headers['Authorization'] = `Bearer ${token}`;\r\n            console.log('Added auth header:', config.headers['Authorization'].substring(0, 20) + '...');\r\n        }\r\n        \r\n        return config;\r\n    },\r\n    (error) => {\r\n        console.error('Request interceptor error:', error);\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\nexport { authApi };\r\nexport default apiInstance;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,OAAO,GAAGD,KAAK,CAACE,MAAM,CAAC;EACzBC,OAAO,EAAE,4BAA4B;EACrCC,OAAO,EAAE;IACL,cAAc,EAAE;EACpB;AACJ,CAAC,CAAC;;AAEF;AACA,MAAMC,WAAW,GAAGL,KAAK,CAACE,MAAM,CAAC;EAC7BC,OAAO,EAAE,2BAA2B;EACpCC,OAAO,EAAE;IACL,cAAc,EAAE;EACpB;AACJ,CAAC,CAAC;;AAEF;AACAC,WAAW,CAACC,YAAY,CAACC,OAAO,CAACC,GAAG,CAC/BC,MAAM,IAAK;EACR,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3CC,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAE,CAAC,CAACJ,KAAK,CAAC;EAEpD,IAAIA,KAAK,EAAE;IACPD,MAAM,CAACL,OAAO,CAAC,eAAe,CAAC,GAAG,UAAUM,KAAK,EAAE;IACnDG,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEL,MAAM,CAACL,OAAO,CAAC,eAAe,CAAC,CAACW,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,KAAK,CAAC;EAC/F;EAEA,OAAON,MAAM;AACjB,CAAC,EACAO,KAAK,IAAK;EACPH,OAAO,CAACG,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;EAClD,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAChC,CACJ,CAAC;AAED,SAASf,OAAO;AAChB,eAAeI,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}